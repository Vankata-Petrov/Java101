package wednesday.reversecollection;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;

public class ReverseGenericCollection {

	static <T> void reverse(Collection<T> list) {
		PriorityQueue<String> reversed =
			    new PriorityQueue<String>(list.size(), new Comparator<String>() {
			    @Override
			    public int compare(String o1, String o2) {
			        return -o1.compareTo(o2);
			    }
			});
//			reversed.add( list); 
//		Stack<T> stack = new Stack<>();
//		for (T t : list) {
//			stack.push(t);
//		}
//		list.removeAll(list);
//		Iterator<T> it = stack.iterator();
//		while (it.hasNext()) {
//			list.add(stack.pop());
//		}
	}

	public static void main(String[] args) {
		Stack<Integer> stack = new Stack<>();
		Set<Integer> map = new HashSet<>();
		List<Integer> l = new ArrayList<>();
		for (int i = 0; i < 10; i++) {
			l.add(i);
			map.add(i);
			stack.push(i);
		}
		reverse(stack);
		System.out.println(stack);
		// reverse(l);
		// System.out.println(l);
	}
}
