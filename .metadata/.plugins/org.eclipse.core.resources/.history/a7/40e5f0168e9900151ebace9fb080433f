package wednesday.reversecollection;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.Stack;

public class ReverseGenericCollection {

	static <T> void reverse(Collection<T> list) {
		
		Stack<T> stack = new Stack<>();
		for (T t : list) {
			stack.push(t);
		}		
		T[] ob =(T[]) new Object[stack.size()];
		Iterator<T> it = stack.iterator();
		for (int i = 0; i < ob.length; i++) {
			ob[i] = stack.pop();
		}
		list.removeAll(list);
		Collections.addAll(list, ob);
//	
//		while (it.hasNext()) {
//			list.add(stack.pop());
//
//		}
	}

	public static void main(String[] args) {
		Stack<Integer> stack = new Stack<>();
		Set<Integer> map = new HashSet<>();
		List<Integer> l = new ArrayList<>();
		for (int i = 0; i < 10; i++) {
			l.add(i);
			map.add(i);
			stack.push(i);
		}
		reverse(stack);
		System.out.println(stack);
		// reverse(l);
		// System.out.println(l);
	}
}
