package monday.vector;

import java.util.Iterator;
import java.util.ListIterator;

public class ListIter<T> implements Iterable<T> {
	private Object[] data;
	private int nextElement;

	public ListIter(Object[] data) {
		this.data = data;
		nextElement = 0;
	}

	@Override
	public Iterator<T> iterator() {
		return new ListIterator<T>() {

			@Override
			public boolean hasNext() {
				return nextElement < data.length;
			}

			@SuppressWarnings("unchecked")
			@Override
			public T next() {
				T el = null;
				if (hasNext()) {
					el = (T) data[nextElement++];
				}
				return el;
			}

			@Override
			public boolean hasPrevious() {
				return nextElement > 0;
			}

			@SuppressWarnings("unchecked")
			@Override
			public T previous() {
				T el = null;
				if (hasPrevious()) {
					el = (T) data[nextElement--];
				}
				return el;
			}

			@Override
			public int nextIndex() {
				int nextIndex = nextElement;
				if (hasNext()) {
					return nextIndex + 1;
				}
				return 0;
			}

			@Override
			public int previousIndex() {
				// TODO Auto-generated method stub
				return 0;
			}

			@Override
			public void remove() {
				// TODO Auto-generated method stub

			}

			@Override
			public void set(T e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void add(T e) {
				// TODO Auto-generated method stub

			}
		};
	}

}
