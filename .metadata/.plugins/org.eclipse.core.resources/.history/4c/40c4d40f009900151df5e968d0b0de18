package monday.vector;

import java.util.ListIterator;

public class ListIter<T> implements ListIterator<T> {
	private Object[] data;
	private int nextElement;

	public ListIter(Object[] data) {
		this.data = data;
		nextElement = 0;
	}

	@Override
	public boolean hasNext() {
		return nextElement != data.length - 1;
	}

	@SuppressWarnings("unchecked")
	@Override
	public T next() {
		if (nextIndex() != 0) {
			return (T) data[++nextElement];
		}
		return null;
	}

	@Override
	public boolean hasPrevious() {
		return nextElement > 0;
	}

	@SuppressWarnings("unchecked")
	@Override
	public T previous() {
		T el = null;
		if (hasPrevious()) {
			el = (T) data[nextElement--];
		}
		return el;
	}

	@Override
	public int nextIndex() {
		int nextIndex = nextElement;
		if (hasNext()) {
			return nextIndex + 1;
		}
		return 0;
	}

	@Override
	public int previousIndex() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void remove() {
		// TODO Auto-generated method stub

	}

	@Override
	public void set(T e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void add(T e) {
		// TODO Auto-generated method stub

	}

}
