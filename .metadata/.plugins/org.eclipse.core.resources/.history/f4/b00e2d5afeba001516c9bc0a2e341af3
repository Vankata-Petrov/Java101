package monday.mp3organizer;

import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;

public class Mp3Metadata {
	private String title;
	private String artist;
	private String album;
	public static final String DEFAULT_VALUE = "Amaranthe - The Nexus";
	public static final String UNKNOWN_STATUS = null;
	public static final char BAD_ENCODING = '?';

	public Mp3Metadata(String title, String artist, String album)
			throws UnsupportedEncodingException {
		super();
		this.title = title;
		this.artist = artist;
		this.album = album;
		checkForUnknownStatus();
	}

	// replace with single whitespace and remove punctuation
	private void normalizeString() {
		this.title = title.trim().replaceAll("\\p{P}", "")
				.replaceAll("\\W+", " ");
		this.artist = artist.trim().replaceAll("\\p{P}", "")
				.replaceAll("\\W+", " ");
		this.album = album.trim().replaceAll("\\p{P}", "")
				.replaceAll("\\W+", " ");
	}

	private String decodeTag(String tag) {
		return new String(tag.getBytes(Charset.forName("windows-1251")));
	}

	private void decodeTags() {
		artist = decodeTag(artist);
		album = decodeTag(album);
	}

	private void checkForUnknownStatus() {
		decodeTags();
		// if not put default names
		if (hasArtistName()) {
			setArtist(Mp3Metadata.DEFAULT_VALUE);
		}
		if (hasAlbumName()) {
			setAlbum(Mp3Metadata.DEFAULT_VALUE);
		}
		normalizeString();
	}

	private boolean checkTag(String tag) {
		return tag.equals(UNKNOWN_STATUS) || tag.isEmpty()
				|| checkForBadEncoding(tag);
	}

	private boolean checkForBadEncoding(String tag) {
		return tag.indexOf(BAD_ENCODING) != -1;
	}

	public boolean hasArtistName() {
		return checkTag(artist);
	}

	public boolean hasAlbumName() {
		return checkTag(album);
	}

	public boolean hasSongName() {
		return checkTag(title);
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getArtist() {
		return artist;
	}

	public void setArtist(String artist) {
		this.artist = artist;
	}

	public String getAlbum() {
		return album;
	}

	public void setAlbum(String album) {
		this.album = album;
	}

	@Override
	public String toString() {
		return "Mp3Metadata [title=" + title + ", artist=" + artist
				+ ", album=" + album + "]";
	}
}
