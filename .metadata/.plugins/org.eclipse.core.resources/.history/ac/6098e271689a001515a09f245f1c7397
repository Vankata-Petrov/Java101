package wednesday.cryptoanalysis;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import wednesday.cryptoanalysis.util.Histogram;
import wednesday.cryptoanalysis.util.InglishLettersStatistic;

public class Cryptoanalysis {
	public static void main(String[] args) {
		String text = "Ajb vnf guj luqv akjvojufq  . Sk qkkj egvfs Rkhfwu Lumemu'q akhhfjvq kj vnf ohifjbojc essoxew kg Dofck Ckqve , nfsf'q Ffsjejbk Tkssfq vk qnkr vnf ohifvukuq zkujc dkz nkr ov'q bkjf    Iv'q vnf qehf fxfsz quhhfs . Nk-kjf neq fxfs coxfj hf ejzvnojc kj e iwevf . Tnfz hebf hf akhifvf gks hz iweaf vnf xfsz hkhfjv I ckv ojvk vnf gosqv vfeh; vnev'q rnev vnfz veucnv hf ejb ov'ww df vnev rez ujvow I wfexf . Tnf nocnfs puewovz iwezfsq vnev akhf - ejb Dofck Ckqve oq puewovz - vnf csfevfs vnf akhifvovokj roww df ejb vnf dfvvfs ov'ww df gks vnf vfeh .Ajb gfes jkv ( ks , ewvfsjevoxfwz , bkj'v cfv vkk ftaovfb)  , Tkssfq neq jk iwejq vk vuam veow ejb suj ejb wfexf noq iezanfamq dfnojb .    I bkj'v nexf ejz iwejq vk hkxf erez socnv jkr .    Ig rf woqvfjfb vk eww vnf suhkusq rf'b nexf 50 iwezfsq . Nkr'q jkv vnf socnv vohf vk df vnojmojc edkuv Cnfwqfe . I'h qusf vnf awud oq rksmojc vk ohiskxf vnf vfeh , duv eww vnev hevvfsq socnv jkr oq vnf Wkswb Cui .Om , vnev dov edkuv vnf 50 iwezfsq hebf hf anuamwf .  Noaf kjf , Ffsjejbk .Nkr , oj ej obfew rkswb , rf rkuwb ifsneiq cfv vnfqf rksbq gskh Lumemu , rnkh rf'b womf vk dfakhf wfcfjbesz ev Cnfwqfe .  Buv rf bkj'v woxf oj ej obfew rkswb , ejb ojqvfeb rf cfv vnfqf rksbq gskh Tkssfq , rnkh rf'b womf vk dfakhf e wkjc-gksckvvfj hfhksz ev Cnfwqfe .  Aweq .Tnev dfojc qeob , qojaf ov'q deqoaewwz ej ohikqqodwf vk veqm vk sob kusqfwxfq kg vnf Â£100h gwki , ev wfeqv nf'q ckv vnf socnv evvovubf .  Hussez?";
		// String text = "Godzilla";
		// System.out.println(text);
		// System.out.println(m);
		String tex = "";
		// System.out.println(InglishLettersStatistic.LETTERS);
		for (int k = 0; k < 5; k++) {

			Map<Character, Integer> m = Histogram.createHistogram(text);
			List<Character> l = new ArrayList<>();
			for (Map.Entry<Character, Integer> entry : m.entrySet()) {
				l.add(entry.getKey());
			}
			// System.out.println(l);
			for (int i = 0; i < text.length(); i++) {
				char letter = text.charAt(i);
				// tex += String.valueOf(InglishLettersStatistic.map(letter));
				if (l.contains(letter)) {
					// System.out.println(letter);
					int pos = l.indexOf(letter);
					// System.out.println(pos);
					tex += InglishLettersStatistic.LETTERS[pos];
					continue;
				}
				tex += letter;
			}
			System.out.println(k);
			// System.out.print(tex);
			text = tex;
			System.out.println(text);
		}
	}

	public static void perm2(List<Character> a) {
		List<Character> sub = new ArrayList<>();
		perm2(sub, a);
	}

	public static void perm2(List<Character> sub, List<Character> a) {
		int L = a.size();
		if (L == 0)
			System.out.println(sub);
		else {
			System.out.println(sub);
			for (int i = 0; i < L; i++) {
				List<Character> ab = new ArrayList<>(sub);
				ab.add(a.get(i));
				List<Character> bc = new ArrayList<>(a);
				bc.remove(i);
				perm2(ab, bc);
			}
		}
	}

}
