package week5.friday.bank;

import java.io.FileNotFoundException;
import java.util.Map;
import java.util.Scanner;

import week5.friday.bank.Bank.OperationType;
import week5.friday.bank.account.BankAccount;
import week5.friday.bank.database.Storage;
import week5.friday.bank.exception.ExceededInterestException;
import week5.friday.bank.exception.InsufficientAvailabilityException;

public class OnlineBanking {

	public static void main(String[] args) throws NumberFormatException,
			ExceededInterestException, InsufficientAvailabilityException,
			FileNotFoundException {
		Scanner sc = new Scanner(System.in);

		// Map<Long, BankAccount> loadedAccounts = new HashMap<>();
		//
		Bank bank = new Bank();
		// for (Map.Entry<Long, BankAccount> entry : bank.accounts.entrySet()) {
		// System.out.println(entry.getValue());
		// }
		System.out.println(Storage.accounts);
		bank.createBankAccount();
		// bank.createBankAccount();
		BankAccount account = bank.login();
		Storage.saveAccounts();
		Storage.saveLastAccountId();
		for (Map.Entry<Long, BankAccount> entry : Storage.accounts.entrySet()) {
			System.out.println(entry.getValue());
		}
		boolean quit = true;
		while (quit) {
			System.out
					.println("Press 1 to add Money\nPress 2 to withdrawn Money\nPress 3 to transfer\nPress 4 to logout");
			int number = Integer.parseInt(sc.nextLine().toLowerCase());
			OperationType type = OperationType.values()[number]-1;
			switch (type) {
			case ADD:
				bank.add(account, Integer.parseInt(sc.nextLine()));
				break;
			case WITHDRAW:
				bank.withdraw(account, Double.parseDouble(sc.nextLine()));
				break;
			case TRANSFER:
				bank.transfer(account, Double.parseDouble(sc.nextLine()));
				break;
			case SHOW_HISTORY:
				account.showHistory();
				break;
			default:
				quit = false;
				break;
			}
		}
		System.out.println(account);
	}
}
