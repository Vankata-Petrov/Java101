package monday.mp3organizer;

import java.nio.charset.Charset;

public class Mp3MetaDataNormalizer {
	private Mp3Metadata data;
	private Mp3MetaDataValidation validator;
	public static final String DEFAULT_VALUE = "Amaranthe - The Nexus";

	public Mp3MetaDataNormalizer(Mp3Metadata data) {
		validator = new Mp3MetaDataValidation(this);
		this.data = data;
	}

	// replace with single whitespace and remove punctuation
	private void normalizeString() {
		getData().setTitle(normalizeTag(getData().getTitle()));
		getData().setArtist(normalizeTag(getData().getArtist()));
		getData().setAlbum(normalizeTag(getData().getAlbum()));
	}

	private String normalizeTag(String tag) {
		return tag.trim().replaceAll("\\p{P}", "").replaceAll("\\W+", " ");
	}

	private String decodeTag(String tag) {
		return new String(tag.getBytes(Charset.forName("windows-1251")));
	}

	private void decodeTags() {
		getData().setAlbum(decodeTag(getData().getArtist()));
		getData().setAlbum(decodeTag(getData().getAlbum()));
	}

	public void checkForUnknownStatus() {
		decodeTags();
		// if not put default names
		if (validator.hasArtistTag()) {
			getData().setArtist(DEFAULT_VALUE);
		}
		if (validator.hasAlbumTag()) {
			getData().setAlbum(DEFAULT_VALUE);
		}
		normalizeString();
	}

	public Mp3Metadata getData() {
		return data;
	}

	public void setData(Mp3Metadata data) {
		this.data = data;
	}

}
