package com.boyko.polinom;

import java.util.Random;

public class Node implements Comparable<Node> {
	int data;
	Node left;
	Node right;

	public Node(Node left, Node right, int data) {
		this.left = left;
		this.right = right;
		this.data = data;
	}

	@Override
	public int compareTo(Node candidate) {
		return this.data > candidate.data ? 1 : 0;
	}

	public static void main(String[] args) {
		Random rand = new Random();
		Node node = new Node(null, null, 1);
		for (int i = 0; i < 10; i++) {
			int n = rand.nextInt(100);
			System.out.println(n);
		}
	}

	public static Node addNode(Node n, int data) {
		if (n.data > data) {
			if (n.right == null) {
				n.right = new Node(null, null, data);
			}
		} else {
			if (n.right == null) {
				n.right = new Node(null, null, data);
			}
		}
		return addNode(n, data);
	}
}
