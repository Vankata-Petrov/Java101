package com.boyko.polinom;

public class Cube {

	static void Gen01(int index, int[] vector) {
		if (index < 0) {
			Print(vector);
		} else {
			for (int i = 0; i <= 1; i++) {
				vector[index] = i;
				Gen01(index - 1, vector);
			}
		}
	}

	static void Print(int[] vector) {
		for (Integer i : vector) {
			System.out.print(i);
		}
		System.out.println();
	}

	static void Main() {
		System.out.println("n = ");
		// int n = int.Parse(Console.ReadLine());

		int[] vector = new int[5];

		Gen01(5 - 1, vector);
	}

	static final int N = 4;

	public static void main(String[] args) {
		int[][][] cube = new int[N][5][5];
		for (int i = 0; i < cube.length; i++) {
			for (int j = 0; j < cube.length; j++) {
				for (int j2 = 0; j2 < cube.length; j2++) {
					cube[i][j][j2] = (j2 + j) * (i + 1);
				}
			}
		}
		walkCube(cube);
	}

	public static void walkCube(int[][][] cube) {
		for (int i = 0; i < cube.length; i++) {
			for (int j = cube.length - 1; j > 0; j--) {
				if (i % 2 == 0) {
					for (int j2 = cube.length - 1; j2 > 0; j2--) {
						System.out.print(cube[i][j][j2] + " ");

					}
				} else {
					for (int j2 = 0; j2 < cube.length; j2++) {
						System.out.print(cube[i][j][j2] + " ");
					}
				}
				System.out.println();
			}
			System.out.println("===========");
		}
	}
}
