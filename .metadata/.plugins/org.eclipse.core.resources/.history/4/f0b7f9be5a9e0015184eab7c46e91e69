package com.boyko.polinom;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

public class PolinomSolver {
	public static void main(String[] args) {
		System.out.println(new PolinomParser("x5+2x^4+3x^3+x+1+x6").parse());
		int[] a = { -2, 1, 4, 5, 7, 8, 10, 100, 200, 400, 4000 };
		binarySearch(-2, a);
		List<Object> list1 = new ArrayList<>();
		List<Object> list2 = new ArrayList<>();
		List<Integer> list3 = Arrays.asList(4, 5, 6);
		list2.add(2);
		list2.add(3);
		list2.add(list3);
		list2.add(7);
		list1.add(1);
		list1.add(list2);
		list1.add(8);
		list1.add(9);
		System.out.println(list1);
		printList(list1);
		permute(new int[] { 1, 2, 3 },3);
	}

	private static void binarySearch(int i, int[] a) {
		int l = 0;
		int r = a.length - 1;
		while (l <= r) {
			int m = (l + r) / 2;

			if (a[m] == i) {
				System.out.println("found");
				return;
			}
			if (a[m] > i) {
				r = m - 1;
			}
			if (a[m] < i) {
				l = m + 1;
			}

		}
		System.out.println("not found");
	}

	@SuppressWarnings("unchecked")
	public static void printList(List<Object> l) {
		Iterator<Object> it = l.iterator();
		System.out.println();
		while (it.hasNext()) {
			Object object = (Object) it.next();
			if (object instanceof List) {
				printList((List<Object>) object);
				System.out.println();
			} else {
				System.out.print(object + " ");
			}
		}
	}

	private static void swap(int[] v, int i, int j) {
		int t = v[i];
		v[i] = v[j];
		v[j] = t;
	}

	public static void permute(int[] v, int n) {
		if (n == 1) {
			System.out.println(Arrays.toString(v));
		} else {
			for (int i = 0; i < n; i++) {
				permute(v, n - 1);
				if (n % 2 == 1) {
					swap(v, 0, n - 1);
				} else {
					swap(v, i, n - 1);
				}
			}
		}
	}
}
