package monday.findbrokenlinks;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;

public class BrokenLinksFinder {
	public static void brokenListFinder(Path path) throws IOException {
		File filePath = path.toFile();
		try {
			File[] f = filePath.listFiles();
			System.out.println(Arrays.toString(f));
			for (File file : filePath.listFiles()) {
				if (file.isDirectory()) {
					brokenListFinder(file.toPath());
				} else {
					if (Files.isSymbolicLink(file.toPath())) {
						if (Files.readSymbolicLink(file.toPath()) == null) {
							System.out.println(file.toPath());
						}
					}
				}
			}
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	public static void main(String[] args) throws IOException {
		BrokenLinksFinder.brokenListFinder(Paths
				.get("home/boyko/Desktop/Boiko"));
	}
}
