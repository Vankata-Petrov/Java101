package wednesday.reversecollection;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.Stack;

public class ReverseGenericCollection {

	static <T> void reverse(Collection<T> list) {
		 Set<String> order = new HashSet<>();
		Set<T> set = new HashSet<>(2, 100.0f);
	    set.addAll(list);
	    String str = set.toString();
	    if (order.add(str))
	      System.out.println(str);
	  
//		Stack<T> stack = new Stack<>();
//		for (T t : list) {
//			stack.push(t);
//		}
//		list.removeAll(list);
//		Iterator<T> it = stack.iterator();
//		while (it.hasNext()) {
//			list.add(stack.pop());
//
//		}
	}

	public static void main(String[] args) {
		Stack<Integer> stack = new Stack<>();
		Set<Integer> map = new HashSet<>();
		List<Integer> l = new ArrayList<>();
		for (int i = 0; i < 10; i++) {
			l.add(i);
			map.add(i);
			stack.push(i);
		}
		reverse(stack);
		System.out.println(stack);
		// reverse(l);
		// System.out.println(l);
	}
}
