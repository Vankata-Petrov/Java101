package monday.findbrokenlinks;

import java.io.File;
import java.io.IOException;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.nio.file.PathMatcher;
import java.nio.file.Paths;
import java.nio.file.attribute.BasicFileAttributes;

public class BrokenLinksFinder {

	private static PathMatcher matcher = FileSystems.getDefault()
			.getPathMatcher("glob:" + "*.mp3");

	public static void brokenListFinder(Path path) throws IOException {
		File filePath = path.toFile();
		try {
			for (File file : filePath.listFiles()) {
				BasicFileAttributes attribute = Files.readAttributes(path,
						BasicFileAttributes.class);
				if (matcher.matches(file.toPath().getFileName())) {
					System.out.println(attribute.toString());
				}
				Path fileToPath = file.toPath();
				if (file.isDirectory()) {
					brokenListFinder(fileToPath);
				} else {
					if (Files.isSymbolicLink(fileToPath)) {
						if (!file.exists()) {
							System.out.println(fileToPath);
						}
					}
				}
			}
		} catch (Exception e) {
			throw new NoSuchFileException("Link is broken");
		}
	}

	public static void main(String[] args) throws IOException {
		BrokenLinksFinder.brokenListFinder(Paths.get("/home/boyko/Desktop/music"));
	}
}
