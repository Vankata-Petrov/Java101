package wednesday.reversecollection;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

public class ReverseGenericCollection {

	static <T> void reverse(Collection<T> collection) {
		 Collection<T> jediForce = new LinkedList<>();
	        Iterator itr = collection.iterator();
	        Object element;
	        while(itr.hasNext()) {
	            element = itr.next();
	            jediForce.add((T) element);
	            System.out.print(element + " ");
	        }
	        collection.clear();
	        Iterator itr2 = jediForce.iterator();

	        while(itr2.hasNext()) {
	            element = itr.next();
	            collection.add((T)element);
	            System.out.print(element + " ");
	        }
//		Iterator<T> it = list.iterator();
//		List<T> l = new ArrayList<T>();
//		int i = 0;
//		while (it.hasNext()) {
//			T t = it.next();
//			l.add(0, t);
//		}
//		for (T t : l) {
//			list.add(t);
//			list.remove(i);
//		}
	}

	public static void main(String[] args) {
		Set<Integer> map = new HashSet<>();
		List<Integer> l = new ArrayList<>();
		for (int i = 0; i < 10; i++) {
			l.add(i);
			map.add(i);
		}
		reverse(map);
		System.out.println(map);
	}
}
