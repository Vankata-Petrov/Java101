package week5.friday.bank;

import week5.friday.bank.account.BankAccount;
import week5.friday.bank.exception.InsufficientAvailabilityException;
import week5.friday.bank.exception.OvercomeInterestException;
import week5.friday.bank.interfaces.BankOperations;

public class Bank implements BankOperations {

	@Override
	public boolean createBankAccount() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean add(BankAccount account, double money) {
		double total = account.getMoney() + money;
		account.setMoney(account.getMoney() + money);
		return account.getMoney() == total;
	}

	@Override
	public double withdraw(BankAccount account, double money)
			throws OvercomeInterestException, InsufficientAvailabilityException {
		if (account.getInterest().getInterestValue() > 1) {
			throw new OvercomeInterestException(
					"Interest is bigger than 1 percent");
		}
		if (account.getMoney() < money) {
			throw new InsufficientAvailabilityException();
		}
		return money;
	}

	@Override
	public boolean transfer(BankAccount account1, BankAccount account2,
			double money) throws OvercomeInterestException,
			InsufficientAvailabilityException {
		double withdrawMoney = withdraw(account1, money);
		return add(account2, withdrawMoney);
	}

}
