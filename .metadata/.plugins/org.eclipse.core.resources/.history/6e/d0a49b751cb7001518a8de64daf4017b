package week5.friday.bank;

import java.io.FileNotFoundException;
import java.util.Map;
import java.util.Scanner;

import week5.friday.bank.Bank.OperationType;
import week5.friday.bank.Login.AccountAccessCommands;
import week5.friday.bank.account.BankAccount;
import week5.friday.bank.database.Storage;
import week5.friday.bank.exception.ExceededInterestException;
import week5.friday.bank.exception.InsufficientAvailabilityException;

public class OnlineBanking {

	public static void main(String[] args) throws NumberFormatException,
			ExceededInterestException, InsufficientAvailabilityException,
			FileNotFoundException {

		Scanner sc = new Scanner(System.in);
		Bank bank = new Bank();
		
		System.out.println("To create Bank account press 1\nTo login press 2");
		int commandNumber = Integer.parseInt(sc.nextLine());
		AccountAccessCommands command = AccountAccessCommands.values()[commandNumber - 1];
		BankAccount account = null;
		switch (command) {
		case CREATE_ACCOUNT:
			bank.createBankAccount();
		case LOGIN:
			account = bank.login();
			break;
		default:
			break;
		}
		System.out.println("Hello " + account.getPerson().getFirstName() + " "
				+ account.getPerson().getLastName());
		boolean quit = true;
		while (quit) {
			System.out
					.println("Press 1 to add Money\nPress 2 to withdrawn Money\nPress 3 to transfer\nPress 4 to view history\nPress 5 to logout");
			int number = Integer.parseInt(sc.nextLine().toLowerCase());
			OperationType type = OperationType.values()[number - 1];
			switch (type) {
			case ADD:
				System.out.println("Add money");
				double money = Double.parseDouble(sc.nextLine());
				boolean success = bank.add(account, money);
				if (success) {
					System.out.println("You succesfully added ");
					System.out.println("Your balance is: "
							+ account.getBalance());
				}
				break;
			case WITHDRAW:
				bank.withdraw(account, Double.parseDouble(sc.nextLine()));
				break;
			case TRANSFER:
				bank.transfer(account, Double.parseDouble(sc.nextLine()));
				break;
			case SHOW_HISTORY:
				account.showHistory();
				break;
			default:
				quit = false;
				break;
			}
		}
	}
}
