package friday.geometryfigure.polygon;

import friday.geometryfigure.GeometryFigure;
import friday.geometryfigure.point.Point;

public final class Triangle extends Polygon {
	// private Point lowerLeft;
	// private Point lowerRight;
	// private Point pik;
	// private LineSegment left;
	// private LineSegment right;
	// private LineSegment base;

	public Triangle(Point lowerLeft, Point lowerRight, Point pik) {
		super(lowerLeft, lowerRight, pik, pik);
		if (pik.getX() == lowerLeft.getX()) {
			throw new IllegalArgumentException("Points are on the same axis.");
		}
		// this.lowerLeft = lowerLeft;
		// this.lowerRight = lowerRight;
		// this.pik = pik;
		// left = new LineSegment(lowerLeft, pik);
		// right = new LineSegment(lowerRight, pik);
		// base = new LineSegment(lowerLeft, lowerRight);
	}

	public Triangle(Triangle triangle) {
		this(triangle.getBaseLeft(), triangle.getBaseRight(), triangle
				.getBaseLeftTop());
	}

	@Override
	public float getPerimeter() {
		return getLeft().getLength() + getRight().getLength()
				+ getBase().getLength();
	}

	@Override
	public float getArea() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Point getCenter() {
		float x = (getBaseLeft().getX() + getBaseRight().getX() + getBaseLeftTop()
				.getX()) / 3;
		float y = (getBaseLeft().getY() + getBaseRight().getY() + getBaseLeftTop()
				.getY()) / 3;
		return new Point(x, y);
	}

	private Point baseMiddle() {
		return new Point(getBaseRight().getX() - (getBase().getLength() / 2),
				getBaseLeft().getY());
	}

	private float getHeight() {
		return new LineSegment(baseMiddle(), getBaseLeftTop()).getLength();
	}

	public static void main(String[] args) {
		Triangle tr = new Triangle(new Point(2, 0), new Point(8, 0), new Point(
				4, 4));
		System.out.println(tr.getHeight());
		System.out.println(tr.getCenter());
		System.out.println(tr);
	}

	@Override
	public String toString() {
		return String.format(
				"Triangle[(x: %.1f,y: %.1f),(height: %.1f,base: %.1f)]",
				lowerLeft.getX(), lowerLeft.getY(), getHeight(),
				base.getLength());
	}
}
