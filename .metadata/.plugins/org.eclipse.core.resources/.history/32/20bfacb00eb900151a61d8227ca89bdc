package monday.filedatacompression;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FileDataCompression {
	public static void compress(Path path) throws IOException {
		int wordId = -1;
		StringBuilder stringBuilder = new StringBuilder();
		Map<String, Integer> mappedWords = new HashMap<>();
		List<String> content = Files.readAllLines(path);
		System.out.println(content);
		for (String words : content) {
			words = words.replaceAll("\\.", " .");
			String[] splited = words.trim().split(" ");
			for (String word : splited) {
				if (word.equals(".")) {
					if (stringBuilder.toString().endsWith("~")) {
						stringBuilder.deleteCharAt(stringBuilder.length()-1);
					}
					stringBuilder.append('.');
					break;
				}
				if (!mappedWords.containsKey(word)) {
					wordId++;
					mappedWords.put(word, wordId);
				} 
					stringBuilder.append(mappedWords.get(word));
					stringBuilder.append("~");
			}
		}
		System.out.println(stringBuilder.toString());
	}

	public static void decompress(Path path) {

	}
}
