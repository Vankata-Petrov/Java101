package monday.subtitlefixer;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;

import monday.filedatacompression.FileManager;

import org.apache.any23.encoding.TikaEncodingDetector;

/*
 * Program convert text in the file from windows-1251 to UTF-8
 * 
 */
public class SubtitleFixer {
	private File file;

	public SubtitleFixer(File file) throws IOException {
		this.file = file;
		fix();
	}

	private void fix() throws IOException {
		BufferedReader br = Files.newBufferedReader(Paths.get(file.getName()),
				Charset.forName("windows-1251"));
		String line;
		while ((line = br.readLine()) != null) {
			System.out.println(line + System.lineSeparator());
		}
	}

	private void fixEncoding() throws IOException {
		File encoded = new File("encoded");
		// Using apache-any23-encoding library
		Charset ch = checkCharset(new BufferedInputStream(new FileInputStream(
				file)));
		// Check whether content is already UTF-8
		if (!ch.name().equals("UTF-8")) {
			// decode file into another file
			rewriteFile(file, encoded, true);
			// rewrite old file with decoded content
			rewriteFile(encoded, file, false);
			encoded.delete();
			FileManager.openFileWithNotePad(file);
		} else {
			System.out.println("This file does not need to be decoded");
		}
	}

	private Charset checkCharset(InputStream is) throws IOException {
		return Charset.forName(new TikaEncodingDetector().guessEncoding(is));
	}

	// @Param usingCharSet tell's whether or not to return charset object from
	// windows-1251
	private void rewriteFile(File src, File dest, boolean usingCharSet)
			throws IOException {
		try (BufferedWriter writer = new BufferedWriter(new FileWriter(dest,
				false));
				BufferedReader br = usingCharSet == true ? Files
						.newBufferedReader(Paths.get(src.getName()),
								Charset.forName("windows-1251"))
						: new BufferedReader(new FileReader(src))) {
			StringBuilder sb = new StringBuilder();
			String line;
			while ((line = br.readLine()) != null) {
				sb.append(line + System.lineSeparator());
				writer.write(line + System.lineSeparator());
			}
			System.out.println(sb);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}
}
