package monday.mp3organizer;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;

public class Id3TagExtractor {
	private static final int ID3_TAG_SIZE = 128;
	private File mp3;
	private Mp3Metadata metaData;

	public Id3TagExtractor(File mp3) throws IOException {
		this.mp3 = mp3;
		this.metaData = readID3Tag();
	}

	@SuppressWarnings("resource")
	public Mp3Metadata readID3Tag() throws IOException {
		RandomAccessFile randomAccessFile = new RandomAccessFile(mp3, "r");
		byte[] tagData = new byte[ID3_TAG_SIZE];
		randomAccessFile.seek(randomAccessFile.length() - ID3_TAG_SIZE);
		randomAccessFile.read(tagData);
		ByteBuffer lst128Bytes = ByteBuffer.allocate(ID3_TAG_SIZE);
		lst128Bytes.put(tagData);
		lst128Bytes.rewind();
		return extractMetaData(lst128Bytes);
	}

	private Mp3Metadata extractMetaData(ByteBuffer byteBuffer)
			throws IllegalArgumentException, UnsupportedEncodingException {
		byte[] tag = new byte[3];
		byte[] title = new byte[30];
		byte[] artist = new byte[30];
		byte[] album = new byte[30];
		byteBuffer.get(tag).get(title).get(artist).get(album);
		return new Mp3Metadata(new String(title).trim(),
				new String(artist).trim(), new String(album).trim());
	}

	public Mp3Metadata getMetaData() {
		return metaData;
	}
}
