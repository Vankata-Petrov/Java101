package wednesday.rotatecollection;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.Stack;

public class Rotator {
	public static <T> Deque<T> rotateLeft(Deque<T> deq, int rotateStep) {
		for (int i = 0; i < Math.abs(rotateStep); i++) {
			
		}
	}

	public static <T> void rotateRigth(Collection<T> collection, int rotateStep) {
		List<T> l = new ArrayList<>();
		for (T t : collection) {
			l.add(t);
		}
		for (int i = 0; i < rotateStep; i++) {
			l.add(0, l.get(l.size() - 1));
			l.remove(l.size() - 1);
		}
		collection.clear();
		for (T t : l) {
			collection.add(t);
		}
	}

	public static <T> void rotate(Collection<T> collection, int rotateStep) {
		Deque<T> deq = new LinkedList<T>();
		deq.addAll(collection);
		collection.clear();
		
		if (rotateStep < 0) {
			rotateLeft(collection, rotateStep);
		} else {
			rotateRigth(collection, rotateStep);
		}
	}

	public static void main(String[] args) {
		List<Integer> l = new ArrayList<>();
		Stack<Integer> l2 = new Stack<>();
		Set<Integer> set = new HashSet<>();
		for (int i = 10; i < 20; i++) {
			l.add(i);
			l2.add(i);
			set.add(i);
		}
		rotate(l, 5);
		System.out.println("right direction: " + l);
		rotate(l2, -3);
		System.out.println("left direction: " + l2);
		rotate(set, -5);
		System.out.println("right direction: " + set);
	}

}
