package friday.geometryfigure.point;

import friday.geometryfigure.GeometryFigure;

public final class Circle implements GeometryFigure {
	private Point center;
	private float radius;

	public Circle(Point center, float radius) {
		this.center = center;
		this.radius = radius;
	}

	public Circle(Circle circle) {
		this(circle.center, circle.radius);
	}

	public Point getCenter() {
		return center;
	}

	@Override
	public float getPerimeter() {
		return (float) (2 * Math.PI * this.radius);
	}

	@Override
	public float getArea() {
		 return (float) (Math.PI * this.radius * this.radius);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((center == null) ? 0 : center.hashCode());
		result = prime * result + Float.floatToIntBits(radius);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Circle other = (Circle) obj;
		if (center == null) {
			if (other.center != null)
				return false;
		} else if (!center.equals(other.center))
			return false;
		if (Float.floatToIntBits(radius) != Float.floatToIntBits(other.radius))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return String.format("Circle[%s,(height: %.1f, width: %.1f)]", center,
				radius, radius / 2);
	}

	public static void main(String[] args) {
		Circle c = new Circle(new Point(10, 5), 5);
		System.out.println(c.getArea());
	}
}
