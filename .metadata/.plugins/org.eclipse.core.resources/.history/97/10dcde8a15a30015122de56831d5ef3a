package friday.shopinventory.model;

import java.util.ArrayList;
import java.util.List;

import friday.shopinventory.database.ProductDataBase;
import friday.shopinventory.exceptions.ProductNotFoundException;
import friday.shopinventory.exceptions.ProductOutOfStockException;

public class Order {
	public class ProductInfo<K, V> {
		private int id;
		private int quantity;
		private double totalPrice;

		public ProductInfo(int id, int quantity, double totalPrice) {
			this.id = id;
			this.quantity = quantity;
			this.totalPrice = totalPrice;
		}

		public int getId() {
			return id;
		}

		public int getQuantity() {
			return quantity;
		}

		public double getTotalPrice() {
			return totalPrice;
		}

		@Override
		public String toString() {
			return String.format(
					"ProductInfo [id= %d, quantity= %d, totalPrice= %.2f]", id,
					quantity, totalPrice);
		}

	}

	private List<ProductInfo<Integer, Integer>> info;

	public Order(int... productId) throws ProductNotFoundException, ProductOutOfStockException {
		ProductDataBase productsDB = ProductDataBase.getInstance();
			info = new ArrayList<>(productId.length);
			for (int id : productId) {
				Product product = productsDB.getProducts().get(id);
				int quantity = product.getQuantity();
				product.setQuantity(quantity - 1);
				if (product.getQuantity() < 0) {
					throw new ProductOutOfStockException(product);
				}
				info.add(new ProductInfo<>(id, quantity, product
						.getTotalPrice()));
			}
	}

	public void showOrder() {
		for (ProductInfo<Integer, Integer> productInfo : info) {
			System.out.println(productInfo.id + " " + productInfo.quantity);
		}
	}

	public List<ProductInfo<Integer, Integer>> getInfo() {
		return info;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		for (ProductInfo<Integer, Integer> productInfo : info) {
			sb.append(productInfo);
		}
		return sb.toString();
	}
}
