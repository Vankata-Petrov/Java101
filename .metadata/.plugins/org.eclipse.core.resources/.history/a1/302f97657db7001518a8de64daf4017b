package week5.friday.bank.database;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.Map;

import week5.friday.bank.account.BankAccount;

public class Storage {
	public static Map<Long, BankAccount> accounts = new HashMap<>();
	public static Long lastAccountID;

	public static void saveAccounts() {
		try {
			FileOutputStream fileOut = new FileOutputStream("bankAccounts.ser");
			ObjectOutputStream out = new ObjectOutputStream(fileOut);
			out.writeObject(accounts);
			out.close();
			fileOut.close();
			System.out.printf("Data is saved in bankAccounts.ser");
		} catch (IOException i) {
			i.printStackTrace();
		}
	}

	@SuppressWarnings({ "unchecked" })
	public static Map<Long, BankAccount> loadFiles() {
		try {
			FileInputStream fileIn = new FileInputStream("bankAccounts.ser");
			ObjectInputStream in = new ObjectInputStream(fileIn);
			accounts = (Map<Long, BankAccount>) in.readObject();
			in.close();
			fileIn.close();
		} catch (IOException i) {
			i.printStackTrace();
		} catch (ClassNotFoundException c) {
			System.out.println("Employee class not found");
			c.printStackTrace();
		}
		return accounts;
	}

	public static Long getLastAccountID() {
		Long id = 0L;
		try {
			FileInputStream fileIn = new FileInputStream("lastAccountId.ser");
			ObjectInputStream in = new ObjectInputStream(fileIn);
			id = (Long) in.readObject();
			in.close();
			fileIn.close();
		} catch (IOException i) {
			i.printStackTrace();
		} catch (ClassNotFoundException c) {
			System.err.println("Long class not found");
			c.printStackTrace();
		}
		return id;
	}

	public static void saveLastAccountId() {
		try {
			FileOutputStream fileOut = new FileOutputStream("lastAccountId.ser");
			ObjectOutputStream out = new ObjectOutputStream(fileOut);
			out.writeObject(lastAccountID);
			out.close();
			fileOut.close();
			System.out.printf("lastAccountId is saved in lastAccountId.ser");
		} catch (IOException i) {
			i.printStackTrace();
		}

	}

	public static void loadAccounts() throws FileNotFoundException {
		if (new File("bankAccounts.ser").exists()) {
			Storage.loadFiles();
		}
	}

	public static void loadLastAccountID() {
		if (new File("lastAccountId.ser").exists()) {
			return Storage.getLastAccountID();
		}
		return 0L;
	}
}
