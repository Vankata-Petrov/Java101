package monday.filedatacompression;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

public class FileDataCompression {
	public static final File COMPRESSED_DATA = new File("compressedFile.properties");
	private static Properties properties = new Properties();

	public static void compress(Path path) throws IOException {
		int wordId = -1;
		Map<String, Integer> mappedWords = new HashMap<>();
		List<String> content = Files.readAllLines(path);
		for (String words : content) {
			words = words.replaceAll("\\s+", "~");
			String[] splited = words.split("~");
			for (String word : splited) {
				word = word.replaceAll("\\p{Punct}", "");
				if (!mappedWords.containsKey(word)) {
					mappedWords.put(word, ++wordId);
					properties.put(wordId + "", word);
				}
				words = words.replaceFirst(word, mappedWords.get(word) + "");
			}
			String oldValue = (String) properties.get("-1");
			String data = oldValue != null ? oldValue + "," + words : words;
			properties.put("-1", data);
		}
		properties.store(new FileWriter(COMPRESSED_DATA), "compression");
		FileManager.openFileWithNotePad(COMPRESSED_DATA);
	}

	public static File decompress(Path path) throws ClassNotFoundException, IOException {
		properties.load(new FileReader(path.toFile()));
		String[] compressedText = properties.get("-1").toString().split(",");
		StringBuilder stringBuilder = new StringBuilder();

		for (String line : compressedText) {
			String[] words = line.split("~");
			for (String wordCode : words) {
				wordCode = wordCode.replaceAll("\\p{Punct}", "");
				String word = properties.getProperty(wordCode);
				line = line.replaceAll(wordCode, word);
			}
			stringBuilder.append(line.replaceAll("\\~", " "));
			stringBuilder.append(System.lineSeparator());
		}

		String finalContent = stringBuilder.toString();
		return FileManager.saveToFile(finalContent);
	}

}
