package com.boyko.polinom;

import java.util.Arrays;

public class PolinomParser {
	private String[] parts;

	public PolinomParser(String expression) {
		expression = expression.replaceAll("\\^", "");
		parts = expression.split("\\+");
	}

	public String parse() {
		String result = "";
		for (int i = 0; i < parts.length; i++) {
			if (!parts[i].equals("1")) {
				result += computePolinom(parts[i]);

			}
		}
		return result;
	}

	public String computePolinom(String polinom) {
		if (polinom.equals("x")) {
			return "1";
		} else if (polinom.length() > 2) {
			String[] inner = polinom.split("x");
			int number = Integer.parseInt(inner[0]);
			int pow = Integer.parseInt(inner[1]);
			return ((number * pow) + "x^" + (pow - 1));
		}
		int pow = Character.getNumericValue(polinom.charAt(1));
		return pow + "x^" + (pow - 1);
	}
}
